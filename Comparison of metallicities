#matplotlib inline
import matplotlib.pyplot as plt
plt.style.use('seaborn-whitegrid')
import numpy as np
import numpy as np
import matplotlib
from pylab import *
import warnings
import mysql.connector as sql
import datetime
import mysql.connector
from mysql.connector import Error
from mysql.connector import errorcode
import matplotlib.pyplot as plt
fig, ax = plt.subplots()
from scipy import stats


print(datetime.datetime.now().time())
db = sql.connect(host="localhost",user="loubna", password="10ubn4", database="sdss")
c = db.cursor()
cmd='''SELECT  KE08_mw ,D16_mw  FROM dr15_metallicities where KE08_mw is not NULL and D16_mw is not NULL'''
#cmd2='''SELECT  D16_mw  FROM dr15_metallicities'''
try:

    c.execute(cmd)

    rows = c.fetchall() #Fetch all (remaining) rows of a query result, returning them as a list of tuples.

except:
    pass
#try:
#    c.execute(cmd2)
#    rows2 = c.fetchall() #
#except:
#    pass

db.close()
print(datetime.datetime.now().time())
#This should select the spaxel ID, the objid, and the metallicity quantity from the database.


rows = np.asarray(rows) #has all the data selected in cmd

#all_metal is a dictionary where the metallicities are named by numbers from  1 to 11 and assigned to their values

#all_metal = {1: rows[:,0] , 2:rows[:,1], 3:m}
dim = np.ndim(rows)
all_metal = {}
for k in range(0,dim):
    all_metal[k] = rows[:,k]

fig = plt.figure()
#Reminder: iteration in dic is in no particular order
for key1, val1 in all_metal.items():
    for key2, val2  in all_metal.items():
  # plot i as a function of all others
        if (key1 == key2):
            continue
        hb = ax.hexbin(val1, val2, gridsize=200, cmap='inferno')
        #ax.set(xlim=(1, )
        #ax.set_title("Plot comparaison between metallicity",,"and ",)

        # naming the x axis
        #plt.xlabel(str(key1)," - axis")
        # naming the y axis
        #plt.ylabel(str(key2)," - axis")

        plt.show()



        # giving a title to graph

        #plt.title('Plot of '+str(key1)+'vs'+str(key2) )
        #plt.savefig('metallicity_comparison'+str(key1)+'vs'+str(key2)+'.pdf')
        # function to show the plot
